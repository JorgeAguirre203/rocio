class Muro {
    constructor() {
        this.pagina = 2;
        this.cargando = false;
        this.observador = new IntersectionObserver(this.cargarMas.bind(this), {
            rootMargin: '200px',
            threshold: 0.1
        });
        
        this.iniciar();
    }
    
    iniciar() {
        const sentinela = document.createElement('div');
        sentinela.id = 'sentinela';
        document.getElementById('muro').appendChild(sentinela);
        this.observador.observe(sentinela);
    }
    
    async cargarMas(entries) {
        if (this.cargando || !entries[0].isIntersecting) return;
        
        this.cargando = true;
        try {
            const respuesta = await fetch(`api/servicios.php?pagina=${this.pagina}`);
            const servicios = await respuesta.json();
            
            if (servicios.length > 0) {
                servicios.forEach(servicio => {
                    document.getElementById('muro').insertAdjacentHTML('beforeend', `
                        <article class="servicio">
                            <h3>${this.escapeHtml(servicio.titulo)}</h3>
                            <p>${this.escapeHtml(servicio.descripcion)}</p>
                            <small>Publicado por: ${this.escapeHtml(servicio.nombre)}</small>
                        </article>
                    `);
                });
                this.pagina++;
            }
        } catch (error) {
            console.error('Error al cargar servicios:', error);
        } finally {
            this.cargando = false;
        }
    }
    
    escapeHtml(text) {
        return text
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;');
    }
}

new Muro();